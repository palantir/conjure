/*
 * (c) Copyright 2018 Palantir Technologies Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import net.ltgt.gradle.errorprone.CheckSeverity

buildscript {
    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
        gradlePluginPortal() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    dependencies {
        classpath 'com.palantir.gradle.jdks:gradle-jdks:0.27.0'
        classpath 'com.palantir.gradle.jdkslatest:gradle-jdks-latest:0.4.0'
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.11.0'
        classpath 'com.palantir.baseline:gradle-baseline-java:4.179.0'
        classpath 'com.palantir.gradle.conjure:gradle-conjure:5.31.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:2.11.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.15.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:2.26.0'
        classpath 'gradle.plugin.org.inferred:gradle-processors:3.7.0'
    }
}

apply plugin: 'com.palantir.external-publish'
apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.git-version'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.baseline-java-versions'
apply plugin: 'com.palantir.jdks.latest'

version gitVersion()

allprojects {
    apply plugin: 'com.palantir.java-format'

    version rootProject.version
    group 'com.palantir.conjure'

    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }
}

configure(subprojects - project(':conjure-api')) {
    apply plugin: 'java-library'
    apply plugin: 'org.inferred.processors'


    tasks.withType(JavaCompile) {
        options.compilerArgs += ['-Werror']
        options.errorprone {
            check("PreferSafeLogger", CheckSeverity.OFF)
            check("PreferSafeLoggingPreconditions", CheckSeverity.OFF)
            check("PreferSafeLoggableExceptions", CheckSeverity.OFF)
            check("Slf4jLogsafeArgs", CheckSeverity.OFF)
        }
    }

    // Run `./gradlew test -Drecreate=true` to recreate all the expected
    // generated code that we have checked into the repo.
    tasks.withType(Test) {
        systemProperty 'recreate', System.getProperty('recreate', 'false')
    }
}

javaVersions {
    libraryTarget = 11
    runtime = 17
}
